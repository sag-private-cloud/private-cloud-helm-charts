{{ if .Values.mysql.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "microservices-runtime.fullname" . }}-storage
  labels:
    app: storage
    com.softwareag/release: {{ .Release.Name }}
  annotations:
    monitoring: "false"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: storage
      com.softwareag/release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: storage
        com.softwareag/release: {{ .Release.Name }}
    spec:
      containers: 
      - name: mysqldb
        image: {{ .Values.mysql.image  }}:{{ .Values.mysql.tag}}
        ports: 
        - containerPort: {{ .Values.mysql.service.port  }}
          name: jdbc-connection
        {{ if .Values.mysql.useCustomConfig}}
        - mountPath: /etc/mysql/conf.d/customconfig.cnf
          name: config-volume
          subPath: customconfig.cnf
        {{ end }}
        env: 
        - name: "MYSQL_ROOT_PASSWORD"
          valueFrom:
            secretKeyRef:
              {{ if .Values.mysql.adminSecretName }}
              name: {{ .Values.mysql.adminSecretName }}
              {{ else }}
              name: {{ include "microservices-runtime.fullname" . }}-db-secret
              {{ end }}
              key: db_root_password
        - name: "MYSQL_DATABASE"
          value: "scratch"
        - name: "MYSQL_USER"
          value: "scratch"
        - name: "MYSQL_PASSWORD"
          valueFrom:
            secretKeyRef:
              {{ if .Values.mysql.adminSecretName }}
              name: {{ .Values.mysql.adminSecretName }}
              {{ else }}
              name: {{ include "microservices-runtime.fullname" . }}-db-secret
              {{ end }}
              key: db_password
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{ end }}
